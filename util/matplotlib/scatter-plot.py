import re
import matplotlib.pyplot as plt

# Paste your log data as a multiline string below
log_data = """
02:10:44.691 [INFO] x: 0.0, y: 0.6160168685657584
02:10:44.691 [INFO] x: 0.005, y: 0.6102826148344151
02:10:44.691 [INFO] x: 0.01, y: 0.6046022417000867
02:10:44.691 [INFO] x: 0.015, y: 0.5989757491627734
02:10:44.691 [INFO] x: 0.02, y: 0.5934031372224748
02:10:44.691 [INFO] x: 0.025, y: 0.5878844058791912
02:10:44.691 [INFO] x: 0.03, y: 0.5824195551329225
02:10:44.691 [INFO] x: 0.035, y: 0.5770085849836688
02:10:44.691 [INFO] x: 0.04, y: 0.5716514954314301
02:10:44.691 [INFO] x: 0.045, y: 0.5663482864762062
02:10:44.691 [INFO] x: 0.05, y: 0.5610989581179973
02:10:44.691 [INFO] x: 0.055, y: 0.5559035103568032
02:10:44.691 [INFO] x: 0.06, y: 0.5507619431926241
02:10:44.691 [INFO] x: 0.065, y: 0.54567425662546
02:10:44.691 [INFO] x: 0.07, y: 0.5406404506553106
02:10:44.691 [INFO] x: 0.075, y: 0.5356605252821763
02:10:44.691 [INFO] x: 0.08, y: 0.530734480506057
02:10:44.691 [INFO] x: 0.085, y: 0.5258623163269525
02:10:44.691 [INFO] x: 0.09, y: 0.5210440327448629
02:10:44.691 [INFO] x: 0.095, y: 0.5162796297597882
02:10:44.691 [INFO] x: 0.1, y: 0.5115691073717286
02:10:44.691 [INFO] x: 0.105, y: 0.5069124655806838
02:10:44.691 [INFO] x: 0.11, y: 0.502309704386654
02:10:44.691 [INFO] x: 0.115, y: 0.49776082378963904
02:10:44.691 [INFO] x: 0.12, y: 0.493265823789639
02:10:44.691 [INFO] x: 0.125, y: 0.48882470438665393
02:10:44.691 [INFO] x: 0.13, y: 0.4844374655806838
02:10:44.691 [INFO] x: 0.135, y: 0.4801041073717286
02:10:44.691 [INFO] x: 0.14, y: 0.4758246297597883
02:10:44.691 [INFO] x: 0.145, y: 0.4715990327448629
02:10:44.691 [INFO] x: 0.15, y: 0.46742731632695245
02:10:44.691 [INFO] x: 0.155, y: 0.4633094805060569
02:10:44.691 [INFO] x: 0.16, y: 0.4592455252821763
02:10:44.692 [INFO] x: 0.165, y: 0.4552354506553107
02:10:44.692 [INFO] x: 0.17, y: 0.45127925662545987
02:10:44.692 [INFO] x: 0.17500000000000002, y: 0.4473769431926241
02:10:44.692 [INFO] x: 0.18, y: 0.44352851035680324
02:10:44.692 [INFO] x: 0.185, y: 0.43973395811799726
02:10:44.692 [INFO] x: 0.19, y: 0.43599328647620617
02:10:44.692 [INFO] x: 0.195, y: 0.43230649543143007
02:10:44.692 [INFO] x: 0.2, y: 0.42867358498366886
02:10:44.692 [INFO] x: 0.20500000000000002, y: 0.4250945551329226
02:10:44.692 [INFO] x: 0.21, y: 0.42156940587919134
02:10:44.692 [INFO] x: 0.215, y: 0.4180981372224749
02:10:44.692 [INFO] x: 0.22, y: 0.4146807491627734
02:10:44.692 [INFO] x: 0.225, y: 0.4113172417000868
02:10:44.692 [INFO] x: 0.23, y: 0.40800761483441517
02:10:44.692 [INFO] x: 0.23500000000000001, y: 0.40475186856575845
02:10:44.692 [INFO] x: 0.24, y: 0.4015500028941167
02:10:44.692 [INFO] x: 0.245, y: 0.3984020178194898
02:10:44.692 [INFO] x: 0.25, y: 0.39530791334187787
02:10:44.692 [INFO] x: 0.255, y: 0.3922676894612808
02:10:44.692 [INFO] x: 0.26, y: 0.3892813461776987
02:10:44.692 [INFO] x: 0.265, y: 0.38634888349113156
02:10:44.692 [INFO] x: 0.27, y: 0.38347030140157934
02:10:44.692 [INFO] x: 0.275, y: 0.380645599909042
02:10:44.692 [INFO] x: 0.28, y: 0.3778747790135196
02:10:44.692 [INFO] x: 0.28500000000000003, y: 0.3751578387150122
02:10:44.692 [INFO] x: 0.29, y: 0.37249477901351963
02:10:44.692 [INFO] x: 0.295, y: 0.369885599909042
02:10:44.692 [INFO] x: 0.3, y: 0.36733030140157935
02:10:44.692 [INFO] x: 0.305, y: 0.3648288834911316
02:10:44.692 [INFO] x: 0.31, y: 0.36238134617769874
02:10:44.692 [INFO] x: 0.315, y: 0.35998768946128085
02:10:44.692 [INFO] x: 0.32, y: 0.35764791334187784
02:10:44.692 [INFO] x: 0.325, y: 0.3553620178194898
02:10:44.692 [INFO] x: 0.33, y: 0.35313000289411667
02:10:44.692 [INFO] x: 0.335, y: 0.35095186856575844
02:10:44.692 [INFO] x: 0.34, y: 0.34882761483441516
02:10:44.692 [INFO] x: 0.34500000000000003, y: 0.3467572417000868
02:10:44.692 [INFO] x: 0.35000000000000003, y: 0.34474074916277336
02:10:44.692 [INFO] x: 0.355, y: 0.34277813722247485
02:10:44.692 [INFO] x: 0.36, y: 0.3408694058791913
02:10:44.692 [INFO] x: 0.365, y: 0.3390145551329226
02:10:44.692 [INFO] x: 0.37, y: 0.3372135849836689
02:10:44.692 [INFO] x: 0.375, y: 0.3354664954314301
02:10:44.692 [INFO] x: 0.38, y: 0.3337732864762062
02:10:44.692 [INFO] x: 0.385, y: 0.33213395811799723
02:10:44.692 [INFO] x: 0.39, y: 0.3305485103568032
02:10:44.693 [INFO] x: 0.395, y: 0.3290169431926241
02:10:44.693 [INFO] x: 0.4, y: 0.32753925662545996
02:10:44.693 [INFO] x: 0.405, y: 0.32611545065531067
02:10:44.693 [INFO] x: 0.41000000000000003, y: 0.3247455252821764
02:10:44.693 [INFO] x: 0.41500000000000004, y: 0.32342948050605697
02:10:44.693 [INFO] x: 0.42, y: 0.3221673163269525
02:10:44.693 [INFO] x: 0.425, y: 0.3209590327448629
02:10:44.693 [INFO] x: 0.43, y: 0.3198046297597883
02:10:44.693 [INFO] x: 0.435, y: 0.3187041073717286
02:10:44.693 [INFO] x: 0.44, y: 0.3176574655806838
02:10:44.693 [INFO] x: 0.445, y: 0.31666470438665395
02:10:44.693 [INFO] x: 0.45, y: 0.31572582378963904
02:10:44.693 [INFO] x: 0.455, y: 0.31484082378963907
02:10:44.693 [INFO] x: 0.46, y: 0.314009704386654
02:10:44.693 [INFO] x: 0.465, y: 0.3132324655806838
02:10:44.693 [INFO] x: 0.47000000000000003, y: 0.3125091073717286
02:10:44.693 [INFO] x: 0.47500000000000003, y: 0.3118396297597883
02:10:44.693 [INFO] x: 0.48, y: 0.31122403274486293
02:10:44.693 [INFO] x: 0.485, y: 0.31066231632695246
02:10:44.693 [INFO] x: 0.49, y: 0.310154480506057
02:10:44.693 [INFO] x: 0.495, y: 0.30970052528217634
02:10:44.693 [INFO] x: 0.5, y: 0.3093004506553107
"""

# Initialize lists to hold x and y values
x_values = []
y_values = []

# Regular expression pattern to extract x and y values
pattern = r'x:\s*([-+]?\d*\.?\d+(?:e[-+]?\d+)?),\s*y:\s*([-+]?\d*\.?\d+(?:e[-+]?\d+)?)'

# Split the log data into lines
lines = log_data.strip().split('\n')

# Iterate over each line and extract x and y values
for line in lines:
    match = re.search(pattern, line)
    if match:
        x_val = float(match.group(1))
        y_val = float(match.group(2))
        x_values.append(x_val)
        y_values.append(y_val)

# Check if data was extracted
if not x_values:
    print('No data extracted. Please check the format of your log data.')
else:
    # Create scatter plot
    plt.figure(figsize=(10, 6))
    plt.scatter(x_values, y_values, color='blue', marker='o')

    # Set labels and title
    plt.xlabel('x', fontsize=12)
    plt.ylabel('y', fontsize=12)
    plt.title('Scatter Plot of x vs. y from Log Data', fontsize=14)

    # Show grid
    plt.grid(True)

    # Display the plot
    plt.show()